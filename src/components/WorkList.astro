---
import { JOBS } from '../consts'

type Props = {
  limit?: number
  showDetail?: boolean
}
const { limit } = Astro.props

const workList = limit ? JOBS.previous.slice(0, limit) : JOBS.previous
---

<div class="zm-work-items">
  <div class="zm-work-item">
    <span class="zm-work-item-label">Current</span>
    <div>
      <a href={JOBS.current.url}>
        {JOBS.current.name}
      </a>
      {
        JOBS.current.description ? (
          <div class="zm-work-description">{JOBS.current.description}</div>
        ) : null
      }
    </div>
  </div>
  <div class="zm-work-item">
    <span class="zm-work-item-label">Previous</span>
    <div>
      {
        workList.map((job, index) => {
          return (
            <>
              <a href={job.url}>{job.name}</a>
              {index < JOBS.previous.length - 1 ? <> Â· </> : null}
            </>
          )
        })
      }
    </div>
  </div>
</div>

<style>
  .zm-work-items {
    container: work-item / inline-size;
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
  }

  .zm-work-item-label {
    flex-shrink: 0;
    width: 5rem;
    font-feature-settings: 'calt' 1, 'liga' 1, 'rlig' 1, 'rvrn' 1, 'kern' 1,
      'rclt' 1, 'tnum' 1;
  }

  @container work-item (min-width: 340px) {
    .zm-work-item {
      display: flex;
      column-gap: var(--space-2xs);
      row-gap: var(--space-3xs);
    }
  }

  .zm-work-description {
    font-size: var(--step--2);
  }
</style>
