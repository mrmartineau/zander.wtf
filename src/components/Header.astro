---
import { SITE_NAV_ITEMS } from '../consts'
import BigName from './BigName.astro'

const pathname = new URL(Astro.request.url).pathname
console.log(`ðŸš€ ~ pathname:`, pathname)
const currentPath = pathname.slice(1) // remove the first "/"
console.log(`ðŸš€ ~ currentPath:`, currentPath)
---

<header>
  <BigName />
  <nav>
    {
      SITE_NAV_ITEMS.map((item) => {
        const isHome = item.url === '/' && pathname === '/'
        const isNotHome = !isHome
        const isActive =
          isHome || (isNotHome && currentPath.startsWith(item.path))
        console.log(`ðŸš€ ~ SITE_NAV_ITEMS.map ~ isActive:`, {
          isHome,
          isNotHome,
          isActive,
          path: item.path,
        })
        return (
          <a href={item.url} class:list={[{ active: isActive }]}>
            {item.text}
          </a>
        )
      })
    }
  </nav>
</header>

<style>
  header {
    margin-bottom: 7vh;
    margin-bottom: 7dvh;
    color: var(--colour-text-bright);
  }

  nav {
    display: flex;
    align-items: center;
    justify-content: space-around;
    flex-wrap: wrap;
    margin-top: 2vh;
    margin-top: 2dvh;
    row-gap: 1vh;
  }
  a {
    position: relative;
    font-variation-settings: 'wght' 800, 'wdth' 125, 'ital' 0;
    font-size: var(--step-1);
    text-transform: uppercase;
    padding: 0 0.5ex;
    letter-spacing: 0.1em;
    leading-trim: both;
    text-edge: cap alphabetic;
    text-decoration: none;
    line-height: 1;
    display: inline-flex;
    align-items: center;
    gap: var(--space-2xs);

    &:hover,
    &.active {
      color: var(--colour-accent);
    }

    &::before {
      content: '';
      display: inline-flex;
      height: 1ex;
      width: 1ex;
      border-radius: 50%;
      background-color: var(--colour-accent);
      opacity: 0;
      transform: translateY(-15%);
    }

    &.active::before {
      opacity: 1;
    }
  }
</style>
